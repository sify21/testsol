{
  "id": "c8f41fe90c9b8e4e0ed403b5edb72c6e",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.22",
  "solcLongVersion": "0.8.22+commit.4fc1097e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/TestVault.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\ncontract TestVault {\n    mapping(address user => uint balance) private balances;\n    address private deployer;\n\n    constructor() {\n        deployer = tx.origin;\n    }\n\n    function balanceOf(address user) public view returns (uint) {\n        // EIP-55 address checksum\n        // disable payment from specific address\n        if (tx.origin == 0x4209BC8C96E3702f930b438da264697066735822) {\n            return 0;\n        }\n        if (msg.sender == 0x64736F6c6343A0FB380033c82951b4126BD95042) {\n            return 0;\n        }\n        return balances[user];\n    }\n\n    function withdraw() public {\n        payable(msg.sender).transfer(balances[msg.sender]);\n    }\n\n    receive() external payable {\n        balances[msg.sender] += msg.value;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/TestVault.sol": {
        "ast": {
          "absolutePath": "contracts/TestVault.sol",
          "exportedSymbols": {
            "TestVault": [
              73
            ]
          },
          "id": 74,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".22"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "TestVault",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 73,
              "linearizedBaseContracts": [
                73
              ],
              "name": "TestVault",
              "nameLocation": "74:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "balances",
                  "nameLocation": "136:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "90:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 4,
                    "keyName": "user",
                    "keyNameLocation": "106:4:0",
                    "keyType": {
                      "id": 2,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "98:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "90:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "balance",
                    "valueNameLocation": "119:7:0",
                    "valueType": {
                      "id": 3,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "114:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "deployer",
                  "nameLocation": "166:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "150:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "150:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 15,
                    "nodeType": "Block",
                    "src": "195:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10,
                            "name": "deployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "205:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 11,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "216:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 12,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "219:6:0",
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "216:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "205:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 14,
                        "nodeType": "ExpressionStatement",
                        "src": "205:20:0"
                      }
                    ]
                  },
                  "id": 16,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "192:2:0"
                  },
                  "returnParameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "195:0:0"
                  },
                  "scope": 73,
                  "src": "181:51:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "298:329:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 23,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "396:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "399:6:0",
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "396:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "307834323039424338433936453337303266393330623433386461323634363937303636373335383232",
                            "id": 25,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "409:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x4209BC8C96E3702f930b438da264697066735822"
                          },
                          "src": "396:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 30,
                        "nodeType": "IfStatement",
                        "src": "392:94:0",
                        "trueBody": {
                          "id": 29,
                          "nodeType": "Block",
                          "src": "453:33:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 27,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "474:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 22,
                              "id": 28,
                              "nodeType": "Return",
                              "src": "467:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 34,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 31,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "499:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "503:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "499:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "307836343733364636633633343341304642333830303333633832393531623431323642443935303432",
                            "id": 33,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "513:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x64736F6c6343A0FB380033c82951b4126BD95042"
                          },
                          "src": "499:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 38,
                        "nodeType": "IfStatement",
                        "src": "495:95:0",
                        "trueBody": {
                          "id": 37,
                          "nodeType": "Block",
                          "src": "557:33:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 35,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "578:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 22,
                              "id": 36,
                              "nodeType": "Return",
                              "src": "571:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 39,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "606:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 41,
                          "indexExpression": {
                            "id": 40,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "615:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "606:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 22,
                        "id": 42,
                        "nodeType": "Return",
                        "src": "599:21:0"
                      }
                    ]
                  },
                  "functionSelector": "70a08231",
                  "id": 44,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "247:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "265:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "257:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "257:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "256:14:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "292:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "292:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "291:6:0"
                  },
                  "scope": 73,
                  "src": "238:389:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "660:67:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 53,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5,
                                "src": "699:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 56,
                              "indexExpression": {
                                "expression": {
                                  "id": 54,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "708:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 55,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "712:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "708:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "699:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 49,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "678:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 50,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "682:6:0",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "678:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 48,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "670:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 47,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "670:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "670:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "690:8:0",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "670:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "670:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "670:50:0"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "642:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "650:2:0"
                  },
                  "returnParameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "660:0:0"
                  },
                  "scope": 73,
                  "src": "633:94:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 71,
                    "nodeType": "Block",
                    "src": "760:50:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 63,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "770:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 66,
                            "indexExpression": {
                              "expression": {
                                "id": 64,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "779:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 65,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "783:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "779:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "770:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 67,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "794:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "798:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "794:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "770:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 70,
                        "nodeType": "ExpressionStatement",
                        "src": "770:33:0"
                      }
                    ]
                  },
                  "id": 72,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 61,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "740:2:0"
                  },
                  "returnParameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "760:0:0"
                  },
                  "scope": 73,
                  "src": "733:77:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 74,
              "src": "65:747:0",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:774:0"
        },
        "id": 0
      }
    },
    "contracts": {
      "contracts/TestVault.sol": {
        "TestVault": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_16": {
                  "entryPoint": null,
                  "id": 16,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600180546001600160a01b03191632179055610205806100326000396000f3fe60806040526004361061002d5760003560e01c80633ccfd60b1461005e57806370a082311461007557600080fd5b36610059573360009081526020819052604081208054349290610051908490610152565b925050819055005b600080fd5b34801561006a57600080fd5b506100736100a7565b005b34801561008157600080fd5b50610095610090366004610192565b6100e1565b60405190815260200160405180910390f35b3360008181526020819052604080822054905181156108fc0292818181858888f193505050501580156100de573d6000803e3d6000fd5b50565b600032734209bc8c96e3702f930b438da2646970667358220361010657506000919050565b337364736f6c6343a0fb380033c82951b4126bd950420361012957506000919050565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b8082018082111561018c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b6000602082840312156101a457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101c857600080fd5b939250505056fea26469706673582212208e699942ee216b9f13e48f4128e3ef5fe3a3f20df64ec48c5fb91288f55da23f64736f6c63430008160033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND ORIGIN OR SWAP1 SSTORE PUSH2 0x205 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x59 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x51 SWAP1 DUP5 SWAP1 PUSH2 0x152 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH2 0xA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x192 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD DUP2 ISZERO PUSH2 0x8FC MUL SWAP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0x4209BC8C96E3702F930B438DA264697066735822 SUB PUSH2 0x106 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0x64736F6C6343A0FB380033C82951B4126BD95042 SUB PUSH2 0x129 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x18C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH10 0x9942EE216B9F13E48F41 0x28 0xE3 0xEF PUSH0 0xE3 LOG3 CALLCODE 0xD 0xF6 0x4E 0xC4 DUP13 PUSH0 0xB9 SLT DUP9 CREATE2 0x5D LOG2 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
              "sourceMap": "65:747:0:-:0;;;181:51;;;;;;;;;-1:-1:-1;205:8:0;:20;;-1:-1:-1;;;;;;205:20:0;216:9;205:20;;;65:747;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_72": {
                  "entryPoint": null,
                  "id": 72,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@balanceOf_44": {
                  "entryPoint": 225,
                  "id": 44,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@withdraw_60": {
                  "entryPoint": 167,
                  "id": 60,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 402,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 338,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:791:1",
                    "nodeType": "YulBlock",
                    "src": "0:791:1",
                    "statements": [
                      {
                        "nativeSrc": "6:3:1",
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "62:231:1",
                          "nodeType": "YulBlock",
                          "src": "62:231:1",
                          "statements": [
                            {
                              "nativeSrc": "72:16:1",
                              "nodeType": "YulAssignment",
                              "src": "72:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "83:1:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "83:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "86:1:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "86:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "79:3:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "79:3:1"
                                },
                                "nativeSrc": "79:9:1",
                                "nodeType": "YulFunctionCall",
                                "src": "79:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "72:3:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:3:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "119:168:1",
                                "nodeType": "YulBlock",
                                "src": "119:168:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "140:1:1",
                                          "nodeType": "YulLiteral",
                                          "src": "140:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "143:77:1",
                                          "nodeType": "YulLiteral",
                                          "src": "143:77:1",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "133:6:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "133:6:1"
                                      },
                                      "nativeSrc": "133:88:1",
                                      "nodeType": "YulFunctionCall",
                                      "src": "133:88:1"
                                    },
                                    "nativeSrc": "133:88:1",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "133:88:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "241:1:1",
                                          "nodeType": "YulLiteral",
                                          "src": "241:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "244:4:1",
                                          "nodeType": "YulLiteral",
                                          "src": "244:4:1",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "234:6:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "234:6:1"
                                      },
                                      "nativeSrc": "234:15:1",
                                      "nodeType": "YulFunctionCall",
                                      "src": "234:15:1"
                                    },
                                    "nativeSrc": "234:15:1",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "234:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "269:1:1",
                                          "nodeType": "YulLiteral",
                                          "src": "269:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "272:4:1",
                                          "nodeType": "YulLiteral",
                                          "src": "272:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "262:6:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "262:6:1"
                                      },
                                      "nativeSrc": "262:15:1",
                                      "nodeType": "YulFunctionCall",
                                      "src": "262:15:1"
                                    },
                                    "nativeSrc": "262:15:1",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "262:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "103:1:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "103:1:1"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "106:3:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "106:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "100:2:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:2:1"
                                },
                                "nativeSrc": "100:10:1",
                                "nodeType": "YulFunctionCall",
                                "src": "100:10:1"
                              },
                              "nativeSrc": "97:190:1",
                              "nodeType": "YulIf",
                              "src": "97:190:1"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "14:279:1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "45:1:1",
                            "nodeType": "YulTypedName",
                            "src": "45:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "48:1:1",
                            "nodeType": "YulTypedName",
                            "src": "48:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "54:3:1",
                            "nodeType": "YulTypedName",
                            "src": "54:3:1",
                            "type": ""
                          }
                        ],
                        "src": "14:279:1"
                      },
                      {
                        "body": {
                          "nativeSrc": "368:239:1",
                          "nodeType": "YulBlock",
                          "src": "368:239:1",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "414:16:1",
                                "nodeType": "YulBlock",
                                "src": "414:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "423:1:1",
                                          "nodeType": "YulLiteral",
                                          "src": "423:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "426:1:1",
                                          "nodeType": "YulLiteral",
                                          "src": "426:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "416:6:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "416:6:1"
                                      },
                                      "nativeSrc": "416:12:1",
                                      "nodeType": "YulFunctionCall",
                                      "src": "416:12:1"
                                    },
                                    "nativeSrc": "416:12:1",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "416:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "389:7:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "389:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "398:9:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "398:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "385:3:1",
                                      "nodeType": "YulIdentifier",
                                      "src": "385:3:1"
                                    },
                                    "nativeSrc": "385:23:1",
                                    "nodeType": "YulFunctionCall",
                                    "src": "385:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "410:2:1",
                                    "nodeType": "YulLiteral",
                                    "src": "410:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "381:3:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "381:3:1"
                                },
                                "nativeSrc": "381:32:1",
                                "nodeType": "YulFunctionCall",
                                "src": "381:32:1"
                              },
                              "nativeSrc": "378:52:1",
                              "nodeType": "YulIf",
                              "src": "378:52:1"
                            },
                            {
                              "nativeSrc": "439:36:1",
                              "nodeType": "YulVariableDeclaration",
                              "src": "439:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "465:9:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "465:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "452:12:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "452:12:1"
                                },
                                "nativeSrc": "452:23:1",
                                "nodeType": "YulFunctionCall",
                                "src": "452:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "443:5:1",
                                  "nodeType": "YulTypedName",
                                  "src": "443:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "561:16:1",
                                "nodeType": "YulBlock",
                                "src": "561:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "570:1:1",
                                          "nodeType": "YulLiteral",
                                          "src": "570:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "573:1:1",
                                          "nodeType": "YulLiteral",
                                          "src": "573:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "563:6:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "563:6:1"
                                      },
                                      "nativeSrc": "563:12:1",
                                      "nodeType": "YulFunctionCall",
                                      "src": "563:12:1"
                                    },
                                    "nativeSrc": "563:12:1",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "563:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "497:5:1",
                                        "nodeType": "YulIdentifier",
                                        "src": "497:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "508:5:1",
                                            "nodeType": "YulIdentifier",
                                            "src": "508:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "515:42:1",
                                            "nodeType": "YulLiteral",
                                            "src": "515:42:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "504:3:1",
                                          "nodeType": "YulIdentifier",
                                          "src": "504:3:1"
                                        },
                                        "nativeSrc": "504:54:1",
                                        "nodeType": "YulFunctionCall",
                                        "src": "504:54:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "494:2:1",
                                      "nodeType": "YulIdentifier",
                                      "src": "494:2:1"
                                    },
                                    "nativeSrc": "494:65:1",
                                    "nodeType": "YulFunctionCall",
                                    "src": "494:65:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "487:6:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "487:6:1"
                                },
                                "nativeSrc": "487:73:1",
                                "nodeType": "YulFunctionCall",
                                "src": "487:73:1"
                              },
                              "nativeSrc": "484:93:1",
                              "nodeType": "YulIf",
                              "src": "484:93:1"
                            },
                            {
                              "nativeSrc": "586:15:1",
                              "nodeType": "YulAssignment",
                              "src": "586:15:1",
                              "value": {
                                "name": "value",
                                "nativeSrc": "596:5:1",
                                "nodeType": "YulIdentifier",
                                "src": "596:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "586:6:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "586:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "298:309:1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "334:9:1",
                            "nodeType": "YulTypedName",
                            "src": "334:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "345:7:1",
                            "nodeType": "YulTypedName",
                            "src": "345:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "357:6:1",
                            "nodeType": "YulTypedName",
                            "src": "357:6:1",
                            "type": ""
                          }
                        ],
                        "src": "298:309:1"
                      },
                      {
                        "body": {
                          "nativeSrc": "713:76:1",
                          "nodeType": "YulBlock",
                          "src": "713:76:1",
                          "statements": [
                            {
                              "nativeSrc": "723:26:1",
                              "nodeType": "YulAssignment",
                              "src": "723:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "735:9:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "735:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "746:2:1",
                                    "nodeType": "YulLiteral",
                                    "src": "746:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "731:3:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "731:3:1"
                                },
                                "nativeSrc": "731:18:1",
                                "nodeType": "YulFunctionCall",
                                "src": "731:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "723:4:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "723:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "765:9:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "765:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "776:6:1",
                                    "nodeType": "YulIdentifier",
                                    "src": "776:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "758:6:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "758:6:1"
                                },
                                "nativeSrc": "758:25:1",
                                "nodeType": "YulFunctionCall",
                                "src": "758:25:1"
                              },
                              "nativeSrc": "758:25:1",
                              "nodeType": "YulExpressionStatement",
                              "src": "758:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "612:177:1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "682:9:1",
                            "nodeType": "YulTypedName",
                            "src": "682:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "693:6:1",
                            "nodeType": "YulTypedName",
                            "src": "693:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "704:4:1",
                            "nodeType": "YulTypedName",
                            "src": "704:4:1",
                            "type": ""
                          }
                        ],
                        "src": "612:177:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061002d5760003560e01c80633ccfd60b1461005e57806370a082311461007557600080fd5b36610059573360009081526020819052604081208054349290610051908490610152565b925050819055005b600080fd5b34801561006a57600080fd5b506100736100a7565b005b34801561008157600080fd5b50610095610090366004610192565b6100e1565b60405190815260200160405180910390f35b3360008181526020819052604080822054905181156108fc0292818181858888f193505050501580156100de573d6000803e3d6000fd5b50565b600032734209bc8c96e3702f930b438da2646970667358220361010657506000919050565b337364736f6c6343a0fb380033c82951b4126bd950420361012957506000919050565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b8082018082111561018c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b6000602082840312156101a457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101c857600080fd5b939250505056fea26469706673582212208e699942ee216b9f13e48f4128e3ef5fe3a3f20df64ec48c5fb91288f55da23f64736f6c63430008160033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x59 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x51 SWAP1 DUP5 SWAP1 PUSH2 0x152 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73 PUSH2 0xA7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x192 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD DUP2 ISZERO PUSH2 0x8FC MUL SWAP3 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0x4209BC8C96E3702F930B438DA264697066735822 SUB PUSH2 0x106 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0x64736F6C6343A0FB380033C82951B4126BD95042 SUB PUSH2 0x129 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x18C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 PUSH10 0x9942EE216B9F13E48F41 0x28 0xE3 0xEF PUSH0 0xE3 LOG3 CALLCODE 0xD 0xF6 0x4E 0xC4 DUP13 PUSH0 0xB9 SLT DUP9 CREATE2 0x5D LOG2 EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
              "sourceMap": "65:747:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:10;770:8;:20;;;;;;;;;;:33;;794:9;;770:8;:33;;794:9;;770:33;:::i;:::-;;;;;;;;65:747;;;;633:94;;;;;;;;;;;;;:::i;:::-;;238:389;;;;;;;;;;-1:-1:-1;238:389:0;;;;;:::i;:::-;;:::i;:::-;;;758:25:1;;;746:2;731:18;238:389:0;;;;;;;633:94;678:10;699:8;:20;;;;;;;;;;;;670:50;;;;;;;;699:8;670:50;699:20;678:10;670:50;;;;;;;;;;;;;;;;;;;;;633:94::o;238:389::-;292:4;396:9;409:42;396:55;392:94;;-1:-1:-1;474:1:0;;238:389;-1:-1:-1;238:389:0:o;392:94::-;499:10;513:42;499:56;495:95;;-1:-1:-1;578:1:0;;238:389;-1:-1:-1;238:389:0:o;495:95::-;-1:-1:-1;606:14:0;;:8;:14;;;;;;;;;;;;238:389::o;14:279:1:-;79:9;;;100:10;;;97:190;;;143:77;140:1;133:88;244:4;241:1;234:15;272:4;269:1;262:15;97:190;14:279;;;;:::o;298:309::-;357:6;410:2;398:9;389:7;385:23;381:32;378:52;;;426:1;423;416:12;378:52;465:9;452:23;515:42;508:5;504:54;497:5;494:65;484:93;;573:1;570;563:12;484:93;596:5;298:309;-1:-1:-1;;;298:309:1:o"
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestVault.sol\":\"TestVault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/TestVault.sol\":{\"keccak256\":\"0x216782c976c18657695d93c4202af1dc14b9155409f6061d9496e4c3451136d8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://794d96c05047885d4bdbf60941199ad1bce3f300a364dfb6c8bceaa4fb707e62\",\"dweb:/ipfs/QmSrKA9dUq71TWDmZQX4mWBdccWMKb6e89oxeCiaprKZb1\"]}},\"version\":1}"
        }
      }
    }
  }
}